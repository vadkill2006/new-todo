{"version":3,"sources":["components/CreateTask.jsx","components/Card.jsx","components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","modal","toggle","inputData","handleChange","addTask","Modal","isOpen","ModalHeader","ModalBody","action","className","type","name","value","onChange","rows","ModalFooter","Button","color","onClick","Card","task","ind","deleteTask","taskname","description","style","console","log","Todo","useState","setModal","setInputData","taskList","setTaskList","id","updateList","splice","localStorage","setItem","JSON","stringify","map","e","target","preValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.059f9397.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CreateTask = ({ modal, toggle, inputData, handleChange, addTask }) => {\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n            <ModalBody>\r\n                <form action=\"\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Task Name</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"taskname\" value={inputData.value} onChange={handleChange} />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Description</label>\r\n                        <textarea className=\"form-control\" rows=\"3\" name=\"description\" value={inputData.value} onChange={handleChange}></textarea>\r\n                    </div>\r\n                </form>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={addTask}>Add Task</Button>{' '}\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateTask\r\n","import React from 'react'\r\n\r\nconst Card = ({ task, ind, deleteTask }) => {\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(ind)\r\n        console.log(ind)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card-wrapper mb-5\">\r\n            <div className=\"border-line\"></div>\r\n            <h5 className=\"mb-3 p-4 pb-0\">{task.taskname}</h5>\r\n            <p className=\"px-4\">{task.description}</p>\r\n            <div className=\"footer-link p-4\">\r\n                <i className=\"far fa-edit me-2\" style={{ \"cursor\": \"pointer\" }}></i>\r\n                <i className=\"far fa-trash-alt\" style={{ \"cursor\": \"pointer\" }} onClick={handleDelete}></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState } from 'react'\r\nimport CreateTask from './CreateTask'\r\nimport Card from './Card'\r\n\r\nconst Todo = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const [inputData, setInputData] = useState({\r\n        taskname: '',\r\n        description: ''\r\n    })\r\n\r\n    const [taskList, setTaskList] = useState([])\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        console.log(inputData)\r\n        setInputData((preValue) => {\r\n            return {\r\n                ...preValue,\r\n                [name]: value\r\n            }\r\n        });\r\n    }\r\n\r\n    const addTask = (e) => {\r\n\r\n        setTaskList([...taskList, inputData])\r\n        setInputData('')\r\n        setModal(false)\r\n    }\r\n\r\n\r\n    const toggle = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    const deleteTask = (id) => {\r\n        let updateList = taskList\r\n        updateList.splice(id, 1)\r\n\r\n        localStorage.setItem(\"tasklist\", JSON.stringify(updateList))\r\n        setTaskList(updateList)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='header'>\r\n                <h2 className=\"mb-4\">Todo Task</h2>\r\n                <button className=\"btn btn-primary\" onClick={() => setModal(true)}>Create Task</button>\r\n            </div>\r\n            <div className='todo-list'>\r\n                {\r\n                    taskList.map((task, ind) => {\r\n                        return <Card key={ind} task={task} deleteTask={deleteTask} />\r\n                    })\r\n                }\r\n            </div>\r\n            <CreateTask toggle={toggle} modal={modal} inputData={inputData} handleChange={handleChange} addTask={addTask} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import Todo from './components/Todo'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}